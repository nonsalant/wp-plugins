{"version":3,"file":"script.js","sources":["../../../../v5/scripts/lib/handle-link-states.js","../../../../v5/scripts/lib/handle-page-change.js","../../../../v5/scripts/lib/handle-clicks.js","../../../../v5/scripts/components/page-of.js","../../../../v5/scripts/script.js"],"sourcesContent":["// Makes links enabled or disabled based on expected pagination,\n// which, in turn, is based on the current pagination mutated using the link's mutation func.\n\n// ! known issue: linkLast's mutate func. uses total variable (from the scope of index.js) which doesn't get its value passed through \n// because data-totalpages is not SSR'ed so not present on the initial page load.\n// // UPDATE: it actually is present on the production site as <input type=\"hidden\" data-totalpages=\"140\">\n// info: linkLast is still disabled on the last page though,\n// because it fits the condition for \"disable links that take to the current page\"\n\nexport default function handlePaginationLinks(functions, props) {\n  const [$, getData, setData] = [...functions];\n  const pagination = +getData(\"pagination\");\n  const totalpages = +getData(\"totalpages\");\n\tconst { linksMap, $row } = { ...props }\n\t\n\t// add more convenient css selectors\n\t$row.classList.toggle(\"first-page\", (pagination === 1));\n\t$row.classList.toggle(\"last-page\", (pagination === totalpages));\n\t\n\t// set disabled states where they make sense (and enable everywhere else)\n\tfor (const [link, mutatePageNumber] of linksMap) {\n\t\tif (!$(link)) continue; // if the selector doesn't exist\n\t\tconst newPageNumber = +mutatePageNumber(pagination);\n\t\t// conditions to disable a type of link (as represented by a selector) \n\t\tconst pgTooBig = (newPageNumber>totalpages)\n\t\tconst pgTooSmall = (newPageNumber<1)\n\t\tconst pgIdentical = (newPageNumber===pagination)\n\n\t\tif (pgTooBig || pgTooSmall || pgIdentical) {\n\t\t\t$$(link).forEach(($el) => { $el.disabled = true })\n\t\t} else {\n\t\t\t$$(link).forEach(($el) => { $el.disabled = false })\n\t\t}\n\t\t\n\t}\n\t\n\tfunction $$(s) { return $row.querySelectorAll(s) }\n}\n","// todo: use signals to send a message when starting a new fetch \n// to cancel any previously started fetches\n\n// small (related) bug: going through dozens of pages and then  \n// clicking first- or lastLink quickly will make it \n// get stuck omn the wrong page\n\nexport default function handlePageChange(functions, props) {\n\t\n  const [$, getData, setData] = [...functions];\n\t\n  const pagination = +getData(\"pagination\");\n  const totalpages = +getData(\"totalpages\");\n  const setPagination = (p) => { setData(\"pagination\", +p) };\n\t\n  const { $row, postsRow, pageOfCurrent, pageOfCurrentName } = { ...props };\n  const $postsRow = $(postsRow);\n\t\n  const remote_location = getData(\"remote_location\");\n\tconst url = new URL(remote_location);\n\n  // Update loading states\n  $postsRow.classList.add(\"loading\");\n  $postsRow.querySelectorAll(\".prel-header, .c-card__frame\").forEach((el) => {\n    el.setAttribute(\"aria-busy\", true);\n  });\n\n  // Update pagination state (optimistic update)\n  setPagination(pagination);\n  if ($(pageOfCurrent)) $(pageOfCurrent).innerText = pagination;\n\t// console.log(pagination)\n\t\n\t// mobile (eagerly scroll back up)\n\tif (isTallerThanViewport()) $row.scrollIntoView();\n\n\t// set pg. number and fetch the page\n  url.searchParams.set(\"paged\", pagination);\n  fetch(url.toString())\n    .then((response) => {\n      if (!response.ok) console.log(\"Response was not ok.\");\n      return response.text();\n    })\n    .then((html) => {\n      if (html === \"\") { console.log(\"No HTML was received.\"); return; }\n\n      // Update Content\n      $postsRow.innerHTML = html;\n      // Clear outer loading states\n      $postsRow.classList.remove(\"loading\");\n\t\t\n\t\t\t// mobile (scroll back up because fetching is done)\n      if (isTallerThanViewport()) {\n\t\t\t\t// console.log($row.offsetHeight +\">\"+ window.innerHeight)\n        scrollBackUp();\n      }\n    });\n\n  function scrollBackUp() {\n    $row.scrollIntoView();\n\t\t$row.querySelector(\"a\").focus(); // focus on 1st link\n    const $targetElement = $(pageOfCurrentName);\n    if (!$targetElement) {\n      return (console.warn(pageOfCurrentName + \" not found so scrollBackUp() was stopped.\"));\n    }\n    pulsate($targetElement);\n  }\n  // If the row is taller than the viewport\n\tfunction isTallerThanViewport() {\n\t\treturn ($row.offsetHeight > window.innerHeight);\n  }\n  // pulsate an element\n  function pulsate(el) {\n    el.classList.remove(\"pulsate\");\n    void el.offsetWidth;\n    el.classList.add(\"pulsate\");\n  }\n}\n","import handlePaginationLinks from \"./handle-link-states.js\";\nimport handlePageChange from \"./handle-page-change.js\";\n\n\nexport default function delegateEventListeners($targetEl, functions, props) {\n\t\n\tconst [$, getData, setData] = [...functions];\n\tconst p = +getData(\"pagination\");\n\tconst total = +getData(\"totalpages\");\n\tconst setPagination = (x) => { setData(\"pagination\", Number(x)) };\n\tconst { linksMap, $row } = { ...props }\n\t\n\tfor (const [link, mutatePageNumber] of linksMap) { // loop through pre-defined map of links and their effects on pagination\n\t\tif (!isLinkValid($(link))) continue; // if invalid skip \"for\" iteration\n\t\tif (isPredefinedTarget(link)) {\n\t\t\tconst newPageNumber = mutatePageNumber(p);\n\t\t\tdoPage(newPageNumber);\n\t\t}\n\t}\n\t\n\t// validate p\n\t// store p as data-pagination att.\n\t// hydrate the page w/ new items\n\t// enable/disable UI items (pagination links)\n\tfunction doPage(p) {\n\t\tif (!isPageValid(p)) { return; }\n\t\tsetPagination(p);\n\t\thandlePageChange(functions,props);\n\t\thandlePaginationLinks(functions,{linksMap,$row});\n\t}\n\t\n\t// Validation functions\n\tfunction isPageValid(p) {\n\t\tif (p<1) return false; \n\t\tif (p>total) return false;\n\t\treturn true;\n\t}\n\tfunction isLinkValid($link) {\n\t\tif (!$link) return false; // if the selector doesn't exist\n\t\tif ($link.disabled) return false; \n\t\treturn true;\n\t}\n\tfunction isPredefinedTarget(link) {\n\t\t// if the event bubbled up to (or was on) a link\n\t\treturn $targetEl.closest(link); // aka isTargetDescendantOfLink\n\t}\n\n}\n","export default function pageOf(totalpages) {\n    return `<div class=\"page-of-wrapper\">\n        <div class=\"page-of\">\n            <button class=\"go-to-page-1\" type=\"button\">\n                <svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <use href=\"#arrow-left-thin\"></use>\n                </svg>\n                <span style=\"white-space: nowrap;\">\n                    Back to: <b>Page 1</b>\n                </span>\n            </button>\n            <span class=\"page-of--you-are-here\">\n                <span class=\"callout page-of--current-name\">\n                    <span>Page</span>\n                    <span class=\"page-of--current\">1</span>\n                </span>\n                <em>of</em>\n                <button type=\"button\" class=\"page-of--total\">\n                    ${totalpages}\n                </button>\n            </span>\n        </div>\n    </div>`;\n}\n","import handleClicks     from \"./lib/handle-clicks.js\";\nimport handleLinkStates from \"./lib/handle-link-states.js\";\nimport pageOfComponent  from \"./components/page-of.js\";\n\nconst posts_rows = document.querySelectorAll(\".posts-row-wrapper\");\n\nconst selectors = {\n  linkNext: \".next-page\",\n  linkPrevious: \".previous-page\",\n  linkLast: \".page-of--total\",\n  linkFirst: \".go-to-page-1\",\n  pageOf: \".page-of\",\n  pageOfCurrent: \".page-of--current\",\n  postsRow: \".posts-row\",\n  pageOfCurrentName: \".page-of--current-name\",\n  pageOfWrapper: \"[data-slot=page-of-wrapper]\",\n}\n\n// 💲 Dollar prefix means the variable is a DOM el.\nposts_rows.forEach( ($row) => {\n  const props = {$row, ...selectors}\n  // let   pagination = +getData(\"pagination\");\n  const totalpages = +getData(\"totalpages\");\n  const functions  = [$, getData, setData];\n  const { linkFirst, linkLast, linkNext, linkPrevious } = {...props}\n  \n  // ❓only run if there's more than one page\n  if (!(totalpages >= 2)) {\n    return;\n  } \n  // $row.querySelectorAll(arrow)?.forEach(\n  //   ($el) => { $el.classList.remove(\"hidden\") }\n  // );\n  \n  // 🗺 Set up a map obj. for predefined page links\n  const linksMap = new Map();\n  linksMap.set(linkNext, x => x+1);\n  linksMap.set(linkPrevious, x => x-1);\n  linksMap.set(linkLast, x => totalpages);\n  linksMap.set(linkFirst, x => 1);\n\n  // 🎬 Init. State  \n  const { pageOfWrapper, pageOf } = { ...props }\n  if (!$(pageOf) && $(pageOfWrapper)) {\n    $(pageOfWrapper).outerHTML = pageOfComponent(totalpages)\n  }\n  if ($(pageOf)) $(pageOf).classList.remove(\"hidden\");\n  if ($(linkLast)) $(linkLast).innerText = totalpages;\n  handleLinkStates( functions, { linksMap, $row } );\n  \n  // ⚗️ Delegate event listeners\n  $row.addEventListener(\"click\", (event)=>{\n    //event.preventDefault() // don't — this affects links in posts\n    const $targetEl = event.target\n    handleClicks($targetEl, functions, {linksMap, ...props})\n  })\n\n  // functions (all scoped to current row)\n  // helper function to interact with the DOM\n  function $(sel) { return $row.querySelector(sel); }\n  // helper functions to access data attributes\n  function getData(data) { return $(\"[data-\"+data+\"]\").dataset[data]; }\n  function setData(data, value) { ($(\"[data-\"+data+\"]\")).dataset[data] = value; }\n\n});"],"names":["handlePaginationLinks","functions","props","$","getData","setData","pagination","totalpages","linksMap","$row","link","mutatePageNumber","newPageNumber","pgTooBig","pgTooSmall","$$","$el","s","handlePageChange","setPagination","p","postsRow","pageOfCurrent","pageOfCurrentName","$postsRow","remote_location","url","el","isTallerThanViewport","response","html","scrollBackUp","$targetElement","pulsate","delegateEventListeners","$targetEl","total","x","isLinkValid","isPredefinedTarget","doPage","isPageValid","$link","pageOf","posts_rows","selectors","linkFirst","linkLast","linkNext","linkPrevious","pageOfWrapper","pageOfComponent","handleLinkStates","event","handleClicks","sel","data","value"],"mappings":"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"}